<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.simple.blog.mapper.CategoryMapper">

    <resultMap id="BaseResultMap" type="com.simple.blog.entity.Category">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="icon" jdbcType="VARCHAR" property="icon" />
    </resultMap>

    <sql id="AllColumns">
        id, created_at, updated_at, name, icon
    </sql>

    <insert id="insert" parameterType="com.simple.blog.entity.Category" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO category ( created_at, updated_at, name, icon )
        VALUES (
                   #{createdAt,jdbcType=TIMESTAMP} ,
                   #{updatedAt,jdbcType=TIMESTAMP} ,
                   #{name,jdbcType=VARCHAR} ,
                   #{icon,jdbcType=VARCHAR}
               )
    </insert>

    <insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO category ( created_at, updated_at, name, icon )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
                #{item.createdAt,jdbcType=TIMESTAMP} ,
                #{item.updatedAt,jdbcType=TIMESTAMP} ,
                #{item.name,jdbcType=VARCHAR} ,
                #{item.icon,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM category
        WHERE id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByIds" parameterType="java.util.List">
        DELETE FROM category
        WHERE
        <choose>
            <when test="list==null || list.isEmpty()">
                1 = 0
            </when>
            <otherwise>
                id IN
                <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </otherwise>
        </choose>
    </delete>

    <update id="update" parameterType="com.simple.blog.entity.Category">
        UPDATE category
        SET
            created_at = #{createdAt,jdbcType=TIMESTAMP} ,
            updated_at = #{updatedAt,jdbcType=TIMESTAMP} ,
            name = #{name,jdbcType=VARCHAR} ,
            icon = #{icon,jdbcType=VARCHAR}
        WHERE id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="AllColumns" />
        FROM category
        WHERE id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectByIds" parameterType="java.util.List" resultMap="BaseResultMap">
        SELECT
        <include refid="AllColumns" />
        FROM category
        WHERE
        <choose>
            <when test="list==null || list.isEmpty()">
                1 = 0
            </when>
            <otherwise>
                id IN
                <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </otherwise>
        </choose>
    </select>

    <select id="page" resultMap="BaseResultMap">
        SELECT
        <include refid="AllColumns" />
        FROM category
        <where>
            <if test="name != null and name !=''">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
        </where>
    </select>

</mapper>